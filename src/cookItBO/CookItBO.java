//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : CookIt.java
//  @ Date : 29/06/2012
//  @ Author : 
//
//
package cookItBO;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.HashMap;

import cookItBO.schedule.Delivery;
import cookItBO.schedule.DeliverySchedule;
import cookItBO.manpower.Employee;
import cookItBO.common.Date;
import cookItBO.common.Time;
import cookItBO.demand.Client;
import cookItBO.demand.Command;
import cookItBO.actives.Depot;
import cookItBO.actives.HQ;
import cookItBO.actives.StockPlace;
import cookItBO.places.Distance;
import cookItBO.places.Location;
import cookItBO.recipes.Menu;


public class CookItBO {
	private HQ hq;
	private ArrayList<DeliverySchedule> deliveryScheduleList;
	private ArrayList<Depot>  depotList;
	private HashMap <Date,Menu> menuList;
	private ArrayList<Client> clientList;
	private ArrayList<Command> commandList;
	private ArrayList<Employee> employeeList;
	private HashMap<Location,HashMap<Location,Distance>> distanceMatrix;
	
	
	public CookItBO(){
		deliveryScheduleList=new ArrayList<DeliverySchedule>();
		depotList=new ArrayList<Depot>();
		menuList=new HashMap<Date, Menu>();
		clientList=new ArrayList<Client>();
		commandList=new ArrayList<Command>();
		employeeList=new ArrayList<Employee>();
		distanceMatrix=new HashMap<Location, HashMap<Location,Distance>>();
	}
	
	public ArrayList<DeliverySchedule> getDeliveryScheduleList() {
		return deliveryScheduleList;
	}
	
	public HQ getHq() {
		return hq;
	}
	public void setHq(HQ hq) {
		this.hq = hq;
	}
	public ArrayList<Depot> getStockPlaceList() {
		return depotList;
	}

	public Menu getMenu(Date d){
		return menuList.get(d);
	}
	
	public void addMenuInList(Date d,Menu m){
		menuList.put(d,m);
	}
	
	public ArrayList<Client> getClientList() {
		return clientList;
	}
	public ArrayList<Employee> getEmployeeList() {
		return employeeList;
	}
	
	public ArrayList<Depot> getDepotList() {
		return depotList;
	}

	public ArrayList<Command> getCommandList() {
		return commandList;
	}


	
	public void addDeliveryScheduleInList(DeliverySchedule ds){
		deliveryScheduleList.add(ds);
	}
	
	public void addDepotInList(Depot d){
		depotList.add(d);
	}

	
	public void addClientInList(Client c){
		clientList.add(c);
	}
	
	public void addCommandInList(Command c){
		commandList.add(c);
	}
	
	public void addEmployeeInList(Employee e){
		employeeList.add(e);
	}

	public void addDistanceInList(Distance d){
		//If there's no distance map for l1, create it
		if(distanceMatrix.get(d.getLocation1())==null){
			distanceMatrix.put(d.getLocation1(), new HashMap<Location,Distance>());
		}
		//Anyway add the l1-l2 distance
		distanceMatrix.get(d.getLocation1()).put(d.getLocation2(), d);
		
		//Same for the l2-l1 distance
		if(distanceMatrix.get(d.getLocation2())==null){
			distanceMatrix.put(d.getLocation2(), new HashMap<Location,Distance>());
		}
		distanceMatrix.get(d.getLocation2()).put(d.getLocation1(), d);

	}
	
	public Distance getDistance(Location a,Location b){
		return distanceMatrix.get(a).get(b);
	}
	
	public HashMap<Location,Distance> getDistanceMapFrom(Location a){
		return distanceMatrix.get(a);
	}

	public void paintItem(Graphics g, int displayTime) {
		hq.paintItem(g);
		for(Client c:clientList){
			c.paintItem(g,displayTime);
		}
		for(Depot d:depotList){
			d.paintItem(g);
		}
		if(deliveryScheduleList.size()>0){
			for(Delivery del:deliveryScheduleList.get(deliveryScheduleList.size()-1).getDeliveryList()){
				del.paintItem(g,hq,displayTime);
			}
		}
		for(Client c:clientList){
			c.paintItemTW(g,displayTime);
		}
	}

	public static int getMinTime() {
		return (new Time(17,0,0).toInt());
	}

	public static int getMaxTime() {
		return (new Time(20,30,0).toInt());
	}
	
	
}
