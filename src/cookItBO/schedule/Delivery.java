//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Delivery.java
//  @ Date : 29/06/2012
//  @ Author : 
//
//



package  cookItBO.schedule;

import gui.GraphPanel;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.ImageObserver;
import java.util.ArrayList;
import java.util.Date;

import sun.java2d.loops.DrawLine;

import cookItBO.actives.HQ;
import cookItBO.common.Time;
import cookItBO.common.Vehicle;
import cookItBO.manpower.Employee;
import cookItBO.places.Location;


public class Delivery {
	private Employee employee;
	private Vehicle vehicle;
	private ArrayList<DeliveryTarget> deliveryTargetList;
	private final int CLIENT_DISPLAY_SIZE=8;
	private final int COURIER_DISPLAY_SIZE=5;
	
	public Delivery(){
		deliveryTargetList=new ArrayList<DeliveryTarget>();
	}
	
	
	public Employee getEmployee() {
		return employee;
	}
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}
	public Vehicle getVehicle() {
		return vehicle;
	}
	public void setVehicle(Vehicle vehicle) {
		this.vehicle = vehicle;
	}
	public void addDeliveryTargetInList(DeliveryTarget dt){
		deliveryTargetList.add(dt);
	}
	public ArrayList<DeliveryTarget> getDeliveryTargetList() {
		return deliveryTargetList;
	}


	public void paintItem(Graphics g,HQ hq, int displayTime) {
		Location oldLocation=hq;
		
		for(DeliveryTarget t:deliveryTargetList){
			g.setColor(Color.black);
			g.drawLine(oldLocation.getXPositionOnFrame(), oldLocation.getYPositionOnFrame(),
					t.getLocation().getXPositionOnFrame(), t.getLocation().getYPositionOnFrame());
			oldLocation=t.getLocation();
			int x=t.getLocation().getXPositionOnFrame()-CLIENT_DISPLAY_SIZE/2;
			int y=t.getLocation().getYPositionOnFrame()-CLIENT_DISPLAY_SIZE/2;
			g.setColor(Color.black);
			g.fillOval(x, y, CLIENT_DISPLAY_SIZE, CLIENT_DISPLAY_SIZE);
		}
		
		//display the courier
		if(deliveryTargetList.size()>0){
			DeliveryTarget oldtarget=deliveryTargetList.get(0);
			int t0,t1,x0,x1,y0,y1,x,y;
			double timeRatio;
			for(DeliveryTarget t:deliveryTargetList){
				t0=oldtarget.getDeliveryTime().toInt();
				t1=t.getDeliveryTime().toInt();
				if(displayTime>t0&&displayTime<t1){
					x1=t.getLocation().getXPositionOnFrame();
					y1=t.getLocation().getYPositionOnFrame();		
					x0=oldtarget.getLocation().getXPositionOnFrame();
					y0=oldtarget.getLocation().getYPositionOnFrame();
					timeRatio=(double)(displayTime-t0)/(double)(t1-t0);
					
					x=x0+(int)((x1-x0)*timeRatio) -COURIER_DISPLAY_SIZE/2;
					y=y0+(int)((y1-y0)*timeRatio)-COURIER_DISPLAY_SIZE/2;
					g.setColor(Color.green.darker());
					ImageObserver ahah= new ImageObserver() {
						@Override
						public boolean imageUpdate(Image arg0, int arg1, int arg2, int arg3,
								int arg4, int arg5) {
						
							return false;
						}
					};
					g.drawImage(GraphPanel.lol, x-23,y-20,ahah);
					//g.fillOval(x, y, COURIER_DISPLAY_SIZE, COURIER_DISPLAY_SIZE);
					
				}
				oldtarget=t;
			}
		}	
		
	}


	
}
